{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABET","SORT_LENGTH","App","visibleGoods","setVisibleGoods","useState","sortField","setSortField","reverse","setReverse","_jsxs","className","children","_jsx","onClick","sortByAlphabet","sort","type","concat","sortByLength","good1","good2","length","reverseGood","reversedGoods","resetGood","map","good","ReactDOM","render","document","getElementById"],"mappings":"4LAIO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,sBAChBC,EAAc,iBAEPC,EAAMA,KACjB,MAAOC,EAAcC,GAAmBC,mBAASN,IAC1CO,EAAWC,GAAgBF,mBAAS,OACpCG,EAASC,GAAcJ,oBAAS,GA4CvC,OACEK,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,QA9CeC,KAEnBX,EADEI,EAEA,IAAIL,GAAca,OAAOR,UAIzB,IAAIL,GAAca,QAItBT,EAAaP,IAoCPiB,KAAK,SACLN,UAAS,kBAAAO,OAAoBZ,IAAcN,EAAgB,GAAK,YAAaY,SAC9E,wBAIDC,cAAA,UACEC,QAxCaK,KAEjBf,EADEI,EAEA,IAAIL,GAAca,MAAK,CAACI,EAAOC,IAAUA,EAAMC,OAASF,EAAME,SAI9D,IAAInB,GAAca,MAAK,CAACI,EAAOC,IAAUD,EAAME,OAASD,EAAMC,UAIlEf,EAAaN,IA8BPgB,KAAK,SACLN,UAAS,qBAAAO,OAAuBZ,IAAcL,EAAc,GAAK,YAAaW,SAC/E,mBAIDC,cAAA,UACEC,QAlCYS,KAClB,MAAMC,EAAgB,IAAIrB,GAAcK,UAExCJ,EAAgBoB,GAEhBf,GAAYD,IA8BNS,KAAK,SACLN,UAAS,qBAAAO,OAAuBV,EAAU,GAAK,YAAaI,SAC7D,aAICN,GAAaE,IACbK,cAAA,UACEC,QAnCQW,KAChBrB,EAAgBL,GAChBQ,EAAa,MACbE,GAAW,IAiCHQ,KAAK,SACLN,UAAU,4BAA2BC,SACtC,aAMLC,cAAA,MAAAD,SACGT,EAAauB,KAAIC,GAChBd,cAAA,MAAI,UAAQ,OAAMD,SAAae,GAAPA,WCxGlCC,IAASC,OACPhB,cAACX,EAAG,IACJ4B,SAASC,eAAe,U","file":"static/js/main.a1cc6eb6.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABET = 'Sort alphabetically';\nconst SORT_LENGTH = 'Sort by length';\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState(null);\n  const [reverse, setReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    if (reverse) {\n      setVisibleGoods(\n        [...visibleGoods].sort().reverse(),\n      );\n    } else {\n      setVisibleGoods(\n        [...visibleGoods].sort(),\n      );\n    }\n\n    setSortField(SORT_ALPHABET);\n  };\n\n  const sortByLength = () => {\n    if (reverse) {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good2.length - good1.length),\n      );\n    } else {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n      );\n    }\n\n    setSortField(SORT_LENGTH);\n  };\n\n  const reverseGood = () => {\n    const reversedGoods = [...visibleGoods].reverse();\n\n    setVisibleGoods(reversedGoods);\n\n    setReverse(!reverse);\n  };\n\n  const resetGood = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField(null);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAlphabet}\n          type=\"button\"\n          className={`button is-info ${sortField === SORT_ALPHABET ? '' : 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={`button is-success ${sortField === SORT_LENGTH ? '' : 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseGood}\n          type=\"button\"\n          className={`button is-warning ${reverse ? '' : 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            onClick={resetGood}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}